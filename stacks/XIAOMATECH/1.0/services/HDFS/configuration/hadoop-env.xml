<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration supports_adding_forbidden="true">
    <property require-input="true">
        <name>download_url</name>
        <value>http://assets.example.com/hadoop-3.2.1.tar.gz</value>
        <description>download url</description>
    </property>
    <property require-input="true">
        <name>share_jars</name>
        <value>spark-2.4.3-yarn-shuffle.jar,tez-aux-services-0.9.2.jar,hadoop-gpl-compression-0.1.0.jar,elasticsearch-hadoop-7.2.0.jar,elasticsearch-hadoop-mr-7.2.0.jar</value>
        <description>hadoop share jars</description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
    </property>

    <property require-input="true">
        <name>common_share_jars</name>
        <value></value>
        <description>common share jars</description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
    </property>

    <property>
        <name>hdfs_log_dir_prefix</name>
        <value>/var/log/hadoop</value>
        <description>Hadoop Log Dir Prefix</description>
        <display-name>Hadoop Log Dir Prefix</display-name>
        <value-attributes>
            <type>directory</type>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hadoop_pid_dir_prefix</name>
        <value>/var/run/hadoop</value>
        <display-name>Hadoop PID Dir Prefix</display-name>
        <description>Hadoop PID Dir Prefix</description>
        <value-attributes>
            <type>directory</type>
            <overridable>false</overridable>
            <editable-only-at-install>true</editable-only-at-install>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hadoop_root_logger</name>
        <value>WARN,RFA</value>
        <display-name>Hadoop Root Logger</display-name>
        <description>Hadoop Root Logger</description>
        <value-attributes>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hadoop_heapsize</name>
        <value>1048576</value>
        <description>Hadoop maximum Java heap size</description>
        <display-name>Hadoop maximum Java heap size (MB)</display-name>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_heapsize</name>
        <value>204800</value>
        <description>NameNode Java heap size</description>
        <display-name>NameNode Java heap size (MB)</display-name>
        <depends-on>
            <property>
                <type>hdfs-site</type>
                <name>dfs.datanode.data.dir</name>
            </property>
        </depends-on>
        <value-attributes>
            <type>int</type>
            <minimum>4096</minimum>
            <maximum>268435456</maximum>
            <unit>MB</unit>
            <increment-step>1024</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_opt_newsize</name>
        <value>512</value>
        <description>Default size of Java new generation for NameNode (Java option -XX:NewSize) Note: The value of
            NameNode new generation size (default size of Java new generation for NameNode (Java option -XX:NewSize))
            should be 1/8 of maximum heap size (-Xmx). Ensure that the value of the namenode_opt_newsize property is 1/8
            the value of maximum heap size (-Xmx).
        </description>
        <display-name>NameNode new generation size</display-name>
        <depends-on>
            <property>
                <type>hadoop-env</type>
                <name>namenode_heapsize</name>
            </property>
        </depends-on>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>16384</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_opt_maxnewsize</name>
        <value>512</value>
        <description>NameNode maximum new generation size</description>
        <display-name>NameNode maximum new generation size</display-name>
        <depends-on>
            <property>
                <type>hadoop-env</type>
                <name>namenode_heapsize</name>
            </property>
        </depends-on>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>16384</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_opt_permsize</name>
        <value>256</value>
        <description>NameNode permanent generation size</description>
        <display-name>NameNode permanent generation size</display-name>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>4096</maximum>
            <unit>MB</unit>
            <increment-step>128</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_opt_maxpermsize</name>
        <value>512</value>
        <description>NameNode maximum permanent generation size</description>
        <display-name>NameNode maximum permanent generation size</display-name>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>4096</maximum>
            <unit>MB</unit>
            <increment-step>128</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>dtnode_heapsize</name>
        <value>20480</value>
        <value-attributes>
            <type>int</type>
            <minimum>4096</minimum>
            <maximum>268435456</maximum>
            <unit>MB</unit>
            <increment-step>1024</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <description>DataNode maximum Java heap size</description>
        <display-name>DataNode maximum Java heap size (MB)</display-name>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>proxyuser_group</name>
        <display-name>Proxy User Group</display-name>
        <value>users</value>
        <property-type>GROUP</property-type>
        <description>Proxy user group.</description>
        <value-attributes>
            <type>user</type>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_user</name>
        <display-name>HDFS User</display-name>
        <value>hdfs</value>
        <property-type>USER</property-type>
        <description>User to run HDFS as</description>
        <value-attributes>
            <type>user</type>
            <overridable>false</overridable>
            <user-groups>
                <property>
                    <type>cluster-env</type>
                    <name>user_group</name>
                </property>
                <property>
                    <type>hdfs-site</type>
                    <name>dfs.permissions.superusergroup</name>
                </property>
            </user-groups>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_tmp_dir</name>
        <value>/tmp</value>
        <description>HDFS tmp Dir</description>
        <display-name>HDFS tmp Dir</display-name>
        <property-type>NOT_MANAGED_HDFS_PATH</property-type>
        <value-attributes>
            <read-only>true</read-only>
            <overridable>false</overridable>
            <visible>false</visible>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_user_nofile_limit</name>
        <value>1048576</value>
        <description>Max open files limit setting for HDFS user.</description>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_user_nproc_limit</name>
        <value>65536</value>
        <description>Max number of processes limit setting for HDFS user.</description>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>namenode_backup_dir</name>
        <display-name>NameNode Backup directory</display-name>
        <description>Local directory for storing backup copy of NameNode images during upgrade</description>
        <value>/tmp/upgrades</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_user_keytab</name>
        <description>HDFS keytab path</description>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>hdfs_principal_name</name>
        <description>HDFS principal name</description>
        <property-type>KERBEROS_PRINCIPAL</property-type>
        <on-ambari-upgrade add="false"/>
    </property>

    <property>
        <name>keyserver_host</name>
        <value>{{keyserver_host_str}}</value>
        <display-name>Key Server Host</display-name>
        <description>Hostnames where Key Management Server is installed</description>
        <value-attributes>
            <type>string</type>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>keyserver_port</name>
        <value/>
        <display-name>Key Server Port</display-name>
        <description>Port number where Key Management Server is available</description>
        <value-attributes>
            <type>int</type>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>

    <!-- hadoop-env.sh -->
    <property>
        <name>content</name>
        <display-name>hadoop-env template</display-name>
        <description>This is the jinja template for hadoop-env.sh file</description>
        <value><![CDATA[
# Set Hadoop-specific environment variables here.

# The only required environment variable is JAVA_HOME.  All others are
# optional.  When running a distributed configuration it is best to
# set JAVA_HOME in this file, so that it is correctly defined on
# remote nodes.

# The java implementation to use.  Required.
export JAVA_HOME={{java_home}}
export HADOOP_HOME_WARN_SUPPRESS=1

# Hadoop home directory
export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native:/usr/share/java/hadoop/native

# Hadoop Configuration Directory
export HADOOP_CONF_DIR={{hadoop_conf_dir}}

{# this is different for HDP1 #}
# Path to jsvc required by secure HDP 2.0 datanode
export JSVC_HOME={{jsvc_path}}


# The maximum amount of heap to use, in MB. Default is 1000.
export HADOOP_HEAPSIZE={{hadoop_heapsize}}

export HADOOP_NAMENODE_INIT_HEAPSIZE="-Xms${HADOOP_HEAPSIZE}m"

# Extra Java runtime options.  Empty by default.
export HADOOP_OPTS="-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}"

USER="$(whoami)"

# Command specific options appended to HADOOP_OPTS when specified
HADOOP_JOBTRACKER_OPTS="-server -XX:MaxGCPauseMillis=4000 -XX:ParallelGCThreads=20 -XX:+UseG1GC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}"

HADOOP_TASKTRACKER_OPTS="-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}"

SHARED_HDFS_NAMENODE_OPTS="-server -XX:MaxGCPauseMillis=4000 -XX:ParallelGCThreads=20 -XX:+UseG1GC -XX:+UseStringDeduplication  -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:ConcGCThreads=4 -XX:G1NewSizePercent=5 -XX:G1MaxNewSizePercent=20 -XX:MaxTenuringThreshold=1 -XX:G1HeapRegionSize=32m -XX:G1MixedGCCountTarget=16 -XX:InitiatingHeapOccupancyPercent=60 -XX:G1OldCSetRegionThresholdPercent=10 -XX:G1HeapWastePercent=10 -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT"
export HDFS_NAMENODE_OPTS="${SHARED_HDFS_NAMENODE_OPTS} -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HDFS_NAMENODE_OPTS}"
export HDFS_DATANODE_OPTS="-server -XX:MaxGCPauseMillis=4000 -XX:ParallelGCThreads=20 -XX:+UseG1GC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HDFS_DATANODE_OPTS} "

export HDFS_SECONDARYNAMENODE_OPTS="${SHARED_HDFS_NAMENODE_OPTS} ${HDFS_SECONDARYNAMENODE_OPTS}"

# The following applies to multiple commands (fs, dfs, fsck, distcp etc)
export HADOOP_CLIENT_OPTS="-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS"

{% if security_enabled %}
export HDFS_NAMENODE_OPTS="$HDFS_NAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false"
export HDFS_SECONDARYNAMENODE_OPTS="$HDFS_SECONDARYNAMENODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_nn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false"
export HDFS_DATANODE_OPTS="$HDFS_DATANODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_dn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false"
export HADOOP_JOURNALNODE_OPTS="$HADOOP_JOURNALNODE_OPTS -Djava.security.auth.login.config={{hadoop_conf_dir}}/hdfs_jn_jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false"
{% endif %}

HDFS_NFS3_OPTS="-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HDFS_NFS3_OPTS}"
HADOOP_BALANCER_OPTS="-server -Xmx${HADOOP_HEAPSIZE}m ${HADOOP_BALANCER_OPTS}"


# On secure datanodes, user to run the datanode as after dropping privileges
export HDFS_DATANODE_SECURE_USER=${HDFS_DATANODE_SECURE_USER:-{{hadoop_secure_dn_user}}}

# Extra ssh options.  Empty by default.
export HADOOP_SSH_OPTS="-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR"

# Where log files are stored.  $HADOOP_HOME/logs by default.
export HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER

# Where log files are stored in the secure data environment.
export HADOOP_SECURE_LOG_DIR=${HADOOP_SECURE_LOG_DIR:-{{hdfs_log_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}

# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.
# export HADOOP_WORKERS=${HADOOP_HOME}/conf/slaves

# host:path where hadoop code should be rsync'd from.  Unset by default.
# export HADOOP_MASTER=master:/home/$USER/src/hadoop

# Seconds to sleep between slave commands.  Unset by default.  This
# can be useful in large clusters, where, e.g., slave rsyncs can
# otherwise arrive faster than the master can service them.
# export HADOOP_WORKER_SLEEP=0.1

# The directory where pid files are stored. /tmp by default.
export HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER
export HADOOP_SECURE_PID_DIR=${HADOOP_SECURE_PID_DIR:-{{hadoop_pid_dir_prefix}}/$HDFS_DATANODE_SECURE_USER}

YARN_RESOURCEMANAGER_OPTS="-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY"

# A string representing this instance of hadoop. $USER by default.
export HADOOP_IDENT_STRING=$USER

# The scheduling priority for daemon processes.  See 'man nice'.

# export HADOOP_NICENESS=10

# Add database libraries
JAVA_JDBC_LIBS=""
if [ -d "/usr/share/java" ]; then
for jarFile in `ls /usr/share/java | grep -E "(mysql|ojdbc|postgresql|sqljdbc)" 2>/dev/null`
do
JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:/usr/share/java/$jarFile
done
fi

#add share_jars
HADOOP_LIBS=""
if [ -d "/usr/share/java/hadoop" ]; then
  for jarFile in `ls /usr/share/java/hadoop`
  do
      HADOOP_LIBS=${HADOOP_LIBS}:/usr/share/java/hadoop/$jarFile
  done
fi

# Add libraries to the hadoop classpath - some may not need a colon as they already include it
export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$HADOOP_CONF_DIR:$HADOOP_HOME/*:$HADOOP_HOME/lib/*:$HADOOP_HOME/lib/native/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/timelineservice/*:$HADOOP_HOME/share/hadoop/yarn/timelineservice/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/client/*:/usr/share/java/hadoop/*
export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}${HADOOP_LIBS}:/usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar

if [ -d "{{stack_root}}/ranger-hdfs-plugin" ]; then
  export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:{{stack_root}}/ranger-hdfs-plugin/lib/*
fi


# Setting path to hdfs command line
export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}

# Mostly required for hadoop 2.0
export JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:{{hadoop_lib_home}}/native:/usr/share/java/hadoop/native:/usr/lib64

export HADOOP_OPTS=" $HADOOP_OPTS"


if [ "$command" == "datanode" ] ; then
{% if is_datanode_max_locked_memory_set %}
ulimit -l {{datanode_max_locked_memory}}
{% endif %}
ulimit -n {{hdfs_user_nofile_limit}}
fi
# Enable ACLs on zookeper znodes if required
{% if hadoop_zkfc_opts is defined %}
export HDFS_ZKFC_OPTS="{{hadoop_zkfc_opts}} $HDFS_ZKFC_OPTS"
{% endif %}
]]>
        </value>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>nfsgateway_heapsize</name>
        <display-name>NFSGateway maximum Java heap size</display-name>
        <value>8192</value>
        <description>Maximum Java heap size for NFSGateway (Java option -Xmx)</description>
        <value-attributes>
            <type>int</type>
            <unit>MB</unit>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>

    <property>
        <name>dfs_ha_initial_cluster_id</name>
        <value>xiaomatech</value>
        <description>namenode cluster id</description>
        <on-ambari-upgrade add="false"/>
    </property>

</configuration>
