<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<metainfo>
    <schemaVersion>2.0</schemaVersion>
    <services>
        <service>
            <name>NIFI</name>
            <displayName>NiFi</displayName>
            <comment>Apache NiFi is an easy to use, powerful, and reliable system to process and distribute data.
            </comment>
            <version>1.8.0</version>
            <components>
                <component>
                    <name>NIFI_CA</name>
                    <displayName>NiFi Certificate Authority</displayName>
                    <category>SLAVE</category>
                    <cardinality>0-1</cardinality>
                    <versionAdvertised>false</versionAdvertised>
                    <timelineAppid>NIFI</timelineAppid>
                    <logs>
                        <log>
                            <logId>nifi_ca</logId>
                            <primary>true</primary>
                        </log>
                    </logs>
                    <commandScript>
                        <script>scripts/nifi_ca.py</script>
                        <scriptType>PYTHON</scriptType>
                        <timeout>10000</timeout>
                    </commandScript>
                    <customCommands>
                        <customCommand>
                            <name>INVALIDATE_CA_SERVER</name>
                            <commandScript>
                                <script>scripts/nifi_ca.py</script>
                                <scriptType>PYTHON</scriptType>
                                <timeout>600</timeout>
                            </commandScript>
                        </customCommand>
                    </customCommands>
                </component>
                <component>
                    <name>NIFI_MASTER</name>
                    <displayName>NiFi</displayName>
                    <category>SLAVE</category>
                    <cardinality>3+</cardinality>
                    <rollingRestartSupported>true</rollingRestartSupported>
                    <versionAdvertised>true</versionAdvertised>
                    <unlimitedKeyJCERequired>ALWAYS</unlimitedKeyJCERequired>
                    <timelineAppid>NIFI</timelineAppid>

                    <dependencies>
                        <dependency>
                            <name>ZOOKEEPER/ZOOKEEPER_CLIENT</name>
                            <scope>host</scope>
                            <auto-deploy>
                                <enabled>true</enabled>
                            </auto-deploy>
                        </dependency>
                    </dependencies>

                    <logs>
                        <log>
                            <logId>nifi_app</logId>
                            <primary>true</primary>
                        </log>
                        <log>
                            <logId>nifi_bootstrap</logId>
                        </log>
                        <log>
                            <logId>nifi_setup</logId>
                        </log>
                        <log>
                            <logId>nifi_user</logId>
                        </log>
                    </logs>
                    <commandScript>
                        <script>scripts/nifi.py</script>
                        <scriptType>PYTHON</scriptType>
                        <timeout>10000</timeout>
                    </commandScript>
                </component>

                <component>
                    <name>NIFI_REGISTRY_MASTER</name>
                    <displayName>NiFi Registry</displayName>
                    <category>MASTER</category>
                    <cardinality>1</cardinality>
                    <versionAdvertised>true</versionAdvertised>
                    <unlimitedKeyJCERequired>ALWAYS</unlimitedKeyJCERequired>
                    <timelineAppid>NIFI_REGISTRY</timelineAppid>
                    <logs>
                        <log>
                            <logId>nifi_registry_app</logId>
                            <primary>true</primary>
                        </log>
                        <log>
                            <logId>nifi_registry_bootstrap</logId>
                        </log>
                        <log>
                            <logId>nifi_registry_setup</logId>
                        </log>
                        <log>
                            <logId>nifi_registry_user</logId>
                        </log>
                    </logs>
                    <commandScript>
                        <script>scripts/nifi_registry.py</script>
                        <scriptType>PYTHON</scriptType>
                        <timeout>10000</timeout>
                    </commandScript>
                </component>

            </components>

            <themes>
                <theme>
                    <fileName>directories.json</fileName>
                    <default>true</default>
                </theme>
                <theme>
                    <fileName>credentials.json</fileName>
                    <default>true</default>
                </theme>
            </themes>

            <commandScript>
                <script>scripts/service_check.py</script>
                <scriptType>PYTHON</scriptType>
                <timeout>600</timeout>
            </commandScript>

            <requiredServices>
                <service>ZOOKEEPER</service>
            </requiredServices>

            <configuration-dependencies>
                <config-type>nifi-ambari-config</config-type>
                <config-type>nifi-ambari-ssl-config</config-type>
                <config-type>nifi-authorizers-env</config-type>
                <config-type>nifi-bootstrap-env</config-type>
                <config-type>nifi-env</config-type>
                <config-type>nifi-flow-env</config-type>
                <config-type>nifi-login-identity-providers-env</config-type>
                <config-type>nifi-node-logback-env</config-type>
                <config-type>nifi-properties</config-type>
                <config-type>nifi-state-management-env</config-type>
                <config-type>ranger-nifi-audit</config-type>
                <config-type>ranger-nifi-plugin-properties</config-type>
                <config-type>ranger-nifi-policymgr-ssl</config-type>
                <config-type>ranger-nifi-security</config-type>

                <config-type>nifi-registry-ambari-config</config-type>
                <config-type>nifi-registry-ambari-ssl-config</config-type>
                <config-type>nifi-registry-authorizers-env</config-type>
                <config-type>nifi-registry-bootstrap-env</config-type>
                <config-type>nifi-registry-env</config-type>
                <config-type>nifi-registry-identity-providers-env</config-type>
                <config-type>nifi-registry-logback-env</config-type>
                <config-type>nifi-registry-properties</config-type>
                <config-type>nifi-registry-providers-env</config-type>

            </configuration-dependencies>
            <quickLinksConfigurations>
                <quickLinksConfiguration>
                    <fileName>quicklinks.json</fileName>
                    <default>true</default>
                </quickLinksConfiguration>
            </quickLinksConfigurations>
            <restartRequiredAfterChange>true</restartRequiredAfterChange>
            <widgetsFileName>widgets.json</widgetsFileName>
            <metricsFileName>metrics.json</metricsFileName>
        </service>
    </services>
</metainfo>
