<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<configuration>
    <property>
        <name>nifi.node.ssl.isenabled</name>
        <value>false</value>
        <display-name>Enable SSL?</display-name>
        <description>
            Check flag to enable SSL. A few additional properties are also required (depending on your setup).
            Assuming NIFI's Certificate Authority (CA) was installed: If Ranger auth will be used, only 'Nifi CA Token'
            is required - otherwise 'Nifi CA Token', 'Initial Admin Identity', 'Node identities' are all required.
            Assuming CA is not installed: If Ranger auth will be used, only Truststore/Keystore paths/type/passwords
            should be set - otherwise Truststore/Keystore paths/type/passwords as well as 'Initial Admin Identity','Node
            identities' are required.
        </description>
        <value-attributes>
            <type>boolean</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>nifi.toolkit.tls.regenerate</name>
        <value>false</value>
        <display-name>NiFi CA Force Regenerate?</display-name>
        <description>Will force regeneration of Tls Certificates and Configuration</description>
        <value-attributes>
            <type>boolean</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property require-input="true">
        <name>nifi.toolkit.tls.token</name>
        <value/>
        <property-type>PASSWORD</property-type>
        <display-name>NiFi CA Token</display-name>
        <description>
            This is a token that will be used by the NiFi Certificate Authority to verify the identity of NiFi nodes
            before issuing them certificates and by the NiFi nodes
            to verify the identity of the NiFi Certificate Authority.

            If relying on NiFi Certificate Authority, set this to a long, random value.
        </description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
            <type>password</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>nifi.toolkit.tls.helper.days</name>
        <value>1095</value>
        <on-ambari-upgrade add="true"/>
        <display-name>NiFi CA Certificate Duration</display-name>
        <description>The number of days that a certificate from the NiFi Certificate Authority should be valid for.
        </description>
    </property>
    <property>
        <name>nifi.toolkit.tls.port</name>
        <value>10443</value>
        <on-ambari-upgrade add="true"/>
        <display-name>NiFi Certificate Authority port</display-name>
        <description>Port for NiFi Certificate Authority to listen on.</description>
    </property>
    <property>
        <name>nifi.toolkit.dn.prefix</name>
        <value>CN=</value>
        <on-ambari-upgrade add="true"/>
        <display-name>NiFi CA DN prefix</display-name>
        <description>Portion of the distinguished name to put before the hostname in TLS certificates (Note, NiFi will
            sort the DN attributes according to the order they appear in https://www.ietf.org/rfc/rfc2253.txt)
        </description>
    </property>
    <property>
        <name>nifi.toolkit.dn.suffix</name>
        <value>, OU=NIFI</value>
        <on-ambari-upgrade add="true"/>
        <display-name>NiFi CA DN suffix</display-name>
        <description>Portion of the distinguished name to put after the hostname in TLS certificates (Note, NiFi will
            sort the DN attributes according to the order they appear in https://www.ietf.org/rfc/rfc2253.txt)
        </description>
    </property>
    <property>
        <name>nifi.security.keystore</name>
        <value>{{ nifi_config_dir }}/keystore.jks</value>
        <on-ambari-upgrade add="true"/>
        <display-name>Keystore path</display-name>
        <description>The full path and name of the keystore. To reference paths that include hostnames you can use
            format such as: /etc/security/nifi-certs/{nifi_node_ssl_host}/{nifi_node_ssl_host}.jks
        </description>
    </property>
    <property>
        <name>nifi.security.keystoreType</name>
        <value/>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
        <display-name>Keystore type</display-name>
        <description>The keystore type. It is blank by default but required if nifi.node.ssl.isenabled=true. e.g. jks
        </description>
    </property>
    <property>
        <name>nifi.security.keystorePasswd</name>
        <value/>
        <property-type>PASSWORD</property-type>
        <display-name>Keystore password</display-name>
        <description>The keystore password. It is blank by default but required if nifi.node.ssl.isenabled=true. If NiFi
            CA is in use and field is left blank password will be autogenerated.
        </description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
            <type>password</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>nifi.security.keyPasswd</name>
        <value/>
        <property-type>PASSWORD</property-type>
        <display-name>Key password</display-name>
        <description>The key password. It is blank by default but required if nifi.node.ssl.isenabled=true. If NiFi CA
            is in use and field is left blank password will be autogenerated.
        </description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
            <type>password</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>
    <property>
        <name>nifi.security.truststore</name>
        <value>{{ nifi_config_dir }}/truststore.jks</value>
        <on-ambari-upgrade add="true"/>
        <display-name>Truststore path</display-name>
        <description>The full path and name of the truststore. To reference paths that include hostnames you can use
            format such as: /etc/security/nifi-certs/{nifi_node_ssl_host}/truststore.jks
        </description>
    </property>
    <property>
        <name>nifi.security.truststoreType</name>
        <value/>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
        <display-name>Truststore type</display-name>
        <description>The truststore type. It is blank by default but required if nifi.node.ssl.isenabled=true. e.g.
            jks
        </description>
    </property>
    <property>
        <name>nifi.security.truststorePasswd</name>
        <value/>
        <property-type>PASSWORD</property-type>
        <display-name>Truststore password</display-name>
        <description>The truststore password. It is blank by default but required if nifi.node.ssl.isenabled=true. If
            NiFi CA is in use and field is left blank password will be autogenerated.
        </description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
            <type>password</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>

    <property>
        <name>nifi.initial.admin.identity</name>
        <value/>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
        <display-name>Initial Admin Identity</display-name>
        <description>
            The identity of an initial admin user that will be granted access to the UI and
            given the ability to create additional users, groups, and policies. Must be specified when Ranger plugin for
            Nifi will not be used for authorization.
            Before changing value of this field, note that it will only take effect if authorizations.xml does not
            contain any existing policies.
            The value of this property could be
            a DN when using certificates or LDAP, or a Kerberos principal. This property will only be used when there
            are no other users, groups, and policies defined. If this property is specified then a Legacy Authorized
            Users File can not be specified.
        </description>
    </property>

    <property>
        <name>content</name>
        <display-name>Node Identities</display-name>
        <description>
            Node Identity [unique key] - The identity of a NiFi cluster node. When clustered, a property for each node
            should be defined, so that every node knows about every other node. If not clustered these properties can be
            ignored.
            Also must be specified when Ranger Nifi plugin will not be used for authorization.
            Before changing value of this field, note that it will only take effect if authorizations.xml does not
            contain any existing policies.
            The name of each property must be unique, for example for a three node cluster:
            &quot;Node Identity A&quot;, &quot;Node Identity B&quot;, &quot;Node Identity C&quot; or &quot;Node Identity
            1&quot;, &quot;Node Identity 2&quot;, &quot;Node Identity 3&quot;
            NOTE: Any identity mapping rules specified in nifi.properties will also be applied to the node identities,
            so the values should be the unmapped identities (i.e. full DN from a certificate).
        </description>
        <value>
            &lt;!-- Provide the identity (typically a DN) of each node when clustered (see tool tip for detailed
            description of Node Identity). Must be specified when Ranger Nifi plugin will not be used for authorization.
            --&gt;

            &lt;!--
            &lt;property name="Node Identity 1"&gt;&lt;/property&gt;
            &lt;property name="Node Identity 2"&gt;&lt;/property&gt;
            &lt;property name="Node Identity 3"&gt;&lt;/property&gt;
            &lt;property name="Node Identity 4"&gt;&lt;/property&gt;
            --&gt;
        </value>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>


</configuration>
